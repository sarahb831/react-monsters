{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","email","CardList","console","log","monsters","map","SearchBox","type","placeholder","onChange","handleChange","App","e","setState","searchField","target","value","state","fetch","then","response","json","users","this","filteredMonsters","filter","toLowerCase","includes","onClick","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yUAGaA,EAAO,SAACC,GAAD,OACZ,sBAAKC,UAAU,iBAAf,UACI,qBAAKC,IAAI,UAAUC,IAAG,+BAA0BH,EAAMI,QAAQC,GAAxC,4BACtB,6BAA4BL,EAAMI,QAAQE,MAAjCN,EAAMI,QAAQC,IACvB,4BAAIL,EAAMI,QAAQG,YCHjBC,EAAW,SAACR,GAErB,OADAS,QAAQC,IAAIV,GACL,qBAAKC,UAAU,YAAf,SACFD,EAAMW,SAASC,KAAI,SAACR,GACjB,OACI,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,UCNtBQ,G,MAAY,SAACb,GACtB,OACI,uBACIC,UAAU,SACVa,KAAK,SACLC,YAAaf,EAAMe,YACnBC,SAAUhB,EAAMiB,iBCoDbC,E,kDAtDb,aAAe,IAAD,8BACZ,gBAqBFD,aAAe,SAAAE,GACb,EAAKC,SAAS,CAAEC,YAAaF,EAAEG,OAAOC,SArBtC,EAAKC,MAAQ,CACXb,SAAU,GACVU,YAAa,IAJH,E,qDAUd,WAAqB,IAAD,OAClBI,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAEJ,EAAKT,SAAU,CACbT,SAAWkB,S,oBAWjB,WAAU,IAAD,SAE2BC,KAAKN,MAA/Bb,EAFD,EAECA,SAAUU,EAFX,EAEWA,YACZU,EAAmBpB,EAASqB,QAAO,SAAA5B,GAAO,OAC5CA,EAAQE,KAAK2B,cAAcC,SAASb,EAAYY,kBAEpD,OACE,sBAAKhC,UAAU,MAAf,UACE,oDACA,cAAC,EAAD,CACEc,YAAY,kBACZE,aAAc,SAAAE,GAAC,OAAE,EAAKF,aAAaE,MAGrC,cAAC,EAAD,CAAUb,KAAK,eAAeK,SAAUoB,IAItC,wBAAQI,QAAS,kBAAK,EAAKf,SAAS,CAAET,SAAS,QAA/C,gC,GA9CQyB,aCMHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.5cf7371b.chunk.js","sourcesContent":["import React from 'react';\nimport './card.styles.css';\n\nexport const Card = (props) => (\n        <div className=\"card-container\">\n            <img alt=\"monster\" src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`} />\n            <h1 key={props.monster.id}>{props.monster.name}</h1>\n            <p>{props.monster.email}</p>\n        </div>\n)","import React from 'react';\nimport './card-list.styles.css';\nimport { Card } from '../card/card.component.jsx';\n\nexport const CardList = (props) => {\n    console.log(props);\n    return <div className=\"card-list\">\n        {props.monsters.map((monster) => {\n            return (\n                <Card key={monster.id} monster={monster} />\n            )\n        })}\n    </div>;\n};\n\n{}","import React from 'react';\nimport './search-box.styles.css';\n\nexport const SearchBox = (props) => {// or can destructure as ({ placeholder, handleChange})\n    return (\n        <input \n            className=\"search\"\n            type=\"search\"\n            placeholder={props.placeholder}\n            onChange={props.handleChange}\n        />\n)}","import { Component } from 'react';\nimport './App.css';\nimport { CardList } from './components/card-list/card-list.component.jsx';\nimport { SearchBox } from './components/search-box/search-box.component';\n\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      monsters: [ ], // start with empty state, then after componentDidMount(), fetch and update state\n      searchField: '',\n    }\n    // would need to bind if not an ES6 arrow function:\n    // this.handleChange = this.handleChange.bind(this);\n  };\n\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users')\n    .then(response => response.json())\n    .then(users => {\n      //console.log(users);\n      this.setState ({\n        monsters : users\n      })\n    }\n    );\n  }\n\n  handleChange = e => {\n    this.setState({ searchField: e.target.value })\n  }\n\n  \n  render() {\n\n    const { monsters, searchField } = this.state;\n    const filteredMonsters = monsters.filter(monster =>\n        monster.name.toLowerCase().includes(searchField.toLowerCase()));\n   \n    return(\n      <div className=\"App\">\n        <h1> Monsters Rolodex </h1>\n        <SearchBox\n          placeholder='Search Monsters'\n          handleChange={e=>this.handleChange(e)}\n        />\n        \n        <CardList name='cardlisttest' monsters={filteredMonsters} >\n          {/*<h1>these are props.children from the App Component</h1>*/}\n        </ CardList>\n            \n          <button onClick={()=> this.setState({ monsters:null })}>\n            Change Text\n          </button>\n      </div>\n\n    ) \n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}